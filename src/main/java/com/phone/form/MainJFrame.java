/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.phone.form;

import com.phone.entity.Phone;
import com.phone.entity.User;
import com.phone.model.PhoneTableModel;
import com.phone.model.UserTableModel;
import com.phone.repos.PhoneRepository;
import com.phone.repos.UserRepository;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.springframework.data.domain.Sort;

/**
 *
 * @author Root
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame(UserRepository userRepository, PhoneRepository phoneRepository) {
        this.userRepository = userRepository;
        this.phoneRepository = phoneRepository;
        userRepository.findAll().forEach(users::add);
        initComponents();
        tUser.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tUser.setAutoCreateRowSorter(true);
        tPhone.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tPhone.setAutoCreateRowSorter(true);
        tUser.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting()) {
                    return;
                }
                ListSelectionModel lsm = (ListSelectionModel) e.getSource();
                if (!lsm.isSelectionEmpty()) {
                    int selectedRow = tUser.getSelectedRow();
                    int row = tUser.convertRowIndexToModel(selectedRow);
                    curUser = users.get(row);
                    curPhones = curUser.getPhones();
                    phones.clear();
                    //if (curPhones.size() > 0) { curPhone = curPhones.get(0);   }
                    phones.addAll(curPhones);
                    phoneModel.fireTableDataChanged();
                    jFirstName.setText(curUser.getFirstName());
                    jLastName.setText(curUser.getLastName());
                    curPhone = null;
                    jPhone.setText("");
                    jNote.setText("");
                }
            }
        });
        tPhone.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting()) {
                    return;
                }
                ListSelectionModel lsm = (ListSelectionModel) e.getSource();
                if (!lsm.isSelectionEmpty()) {
                    int selectedRow = tPhone.getSelectedRow();
                    int row = tPhone.convertRowIndexToModel(selectedRow);
                    curPhone = phones.get(row);
                    jPhone.setText(curPhone.getPhone());
                    jNote.setText(curPhone.getNote());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btAddPhone1 = new javax.swing.JButton();
        btDelPhone1 = new javax.swing.JButton();
        btSavePhone1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSearchFirstName = new javax.swing.JTextField();
        jSearchLastName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jSearchPhone = new javax.swing.JTextField();
        btSearch = new javax.swing.JButton();
        btClear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tUser = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tPhone = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jNote = new javax.swing.JTextField();
        btAddPhone = new javax.swing.JButton();
        btSavePhone = new javax.swing.JButton();
        btDelPhone = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jFirstName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLastName = new javax.swing.JTextField();
        btAddUser = new javax.swing.JButton();
        btSaveUser = new javax.swing.JButton();
        btDelUser = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        jLabel6.setText("jLabel6");

        btAddPhone1.setText("Добавить");

        btDelPhone1.setText("Удалить");

        btSavePhone1.setText("Сохранить");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Имя");

        jLabel2.setText("Фамилия");

        jLabel3.setText("Телефон");

        btSearch.setText("Поиск");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        btClear.setText("Очистить");
        btClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jSearchFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSearchLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSearchPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btClear)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jSearchFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSearchLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jSearchPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSearch)
                    .addComponent(btClear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tUser.setModel(userModel);
        jScrollPane2.setViewportView(tUser);

        tPhone.setModel(phoneModel);
        jScrollPane3.setViewportView(tPhone);

        jLabel5.setText("Телефон");

        jLabel7.setText("Заметка");

        btAddPhone.setText("Добавить");
        btAddPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddPhoneActionPerformed(evt);
            }
        });

        btSavePhone.setText("Сохранить");
        btSavePhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSavePhoneActionPerformed(evt);
            }
        });

        btDelPhone.setText("Удалить");
        btDelPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDelPhoneActionPerformed(evt);
            }
        });

        jLabel8.setText("Имя");

        jLabel9.setText("Фамилия");

        btAddUser.setText("Добавить");
        btAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddUserActionPerformed(evt);
            }
        });

        btSaveUser.setText("Сохранить");
        btSaveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveUserActionPerformed(evt);
            }
        });

        btDelUser.setText("Удалить");
        btDelUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDelUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(22, 22, 22)
                                .addComponent(jLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jNote)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btAddPhone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btSavePhone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btDelPhone)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btAddUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btSaveUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDelUser)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jNote, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btAddPhone)
                            .addComponent(btSavePhone)
                            .addComponent(btDelPhone)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAddUser)
                    .addComponent(btSaveUser)
                    .addComponent(btDelUser))
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddUserActionPerformed
        // TODO add your handling code here:
        // добавим пользователя
        // если имя пустое - выход
        if (jFirstName.getText().isEmpty()) {
            return;
        }
        // если фамилия пустая - выход
        if (jLastName.getText().isEmpty()) {
            return;
        }

        User user = new User();
        user.setFirstName(jFirstName.getText());
        user.setLastName(jLastName.getText());
        // сохраним пользователя в базе
        curUser = userRepository.save(user);
        // если сохранилось - обоновим данные
        if (curUser != null) {
            users.add(user);
            userModel.fireTableDataChanged();
            curPhone = null;
            curPhones = curUser.getPhones();
            userModel.fireTableDataChanged();
            phoneModel.fireTableDataChanged();

        }
        tUser.clearSelection();
        tPhone.clearSelection();
    }//GEN-LAST:event_btAddUserActionPerformed

    private void btSaveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveUserActionPerformed
        // TODO add your handling code here:
        
        // если имя пустое - выход
        if (jFirstName.getText().isEmpty()) {
            return;
        }
        // если фамилия пустая - выход
        if (jLastName.getText().isEmpty()) {
            return;
        }
        curUser.setFirstName(jFirstName.getText());
        curUser.setLastName(jLastName.getText());
        // сохраним в базе
        curUser = userRepository.save(curUser);
        curPhone = null;
        /// обновим 
        curPhones = curUser.getPhones();
        userModel.fireTableDataChanged();
        phoneModel.fireTableDataChanged();

    }//GEN-LAST:event_btSaveUserActionPerformed

    private void btDelUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDelUserActionPerformed
        // TODO add your handling code here:
        // если есть выбраный пользователя то удалим 
        if (curUser != null) {
            userRepository.deleteById(curUser.getId());
            // обновим таблицы
            curPhones.clear();
            curPhone = null;
            phones.clear();
            users.remove(curUser);
            userModel.fireTableDataChanged();
            phoneModel.fireTableDataChanged();
        }
    }//GEN-LAST:event_btDelUserActionPerformed

    private void btAddPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddPhoneActionPerformed
        // TODO add your handling code here:
        // если пользователь не выбран - на выход
        if (curUser == null) {
            return;
        }
        // если телефон не введен - на выход
        if (jPhone.getText().isEmpty()) {
            return;
        }
        Phone phone = new Phone();
        phone.setPhone(jPhone.getText());
        phone.setNote(jNote.getText());
        phone.setUser(curUser);
        // сохраним
        phone = phoneRepository.save(phone);
        // если сохранило - то обновим таблицы
        if (phone != null) {
            curUser = userRepository.findById(curUser.getId()).get();
            users.remove(curUser);
            users.add(curUser);
            curPhone = null;
            curPhones.clear();
            phones.clear();
            phones.addAll(curUser.getPhones());
            phoneModel.fireTableDataChanged();
        }
    }//GEN-LAST:event_btAddPhoneActionPerformed

    private void btSavePhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSavePhoneActionPerformed
        // TODO add your handling code here:
        // если пользователь не выбран - на выход
        if (curUser == null) {
            return;
        }
        // если текущий телефон не выбран - на выход
        if (curPhone == null) {
            return;
        }
        // если телефон пустой  - на выход
        if (jPhone.getText().isEmpty()) {
            return;
        }
        curPhone.setPhone(jPhone.getText());
        curPhone.setNote(jNote.getText());
        // обновим в базе
        curPhone = phoneRepository.save(curPhone);
        // если записалось - обновим таблицы
        if (curPhone != null) {
            curUser = userRepository.findById(curUser.getId()).get();
            users.remove(curUser);users.add(curUser);
            curPhones.clear();
            phones.clear();
            phones.addAll(curUser.getPhones());
            phoneModel.fireTableDataChanged();

        }else {
          jFirstName.setText("");jLastName.setText("");
        }
    }//GEN-LAST:event_btSavePhoneActionPerformed

    private void btDelPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDelPhoneActionPerformed
        // TODO add your handling code here:
        // если пользователь и телефон не выбран - на выход
        if (curUser == null) {
            return;
        }
        if (curPhone == null) {
            return;
        }
        // удалим и обновим данные
        phoneRepository.delete(curPhone);
        curPhone = null;
        curPhones.clear();
        curUser = userRepository.findById(curUser.getId()).get();
        users.remove(curUser);users.add(curUser);
        curPhones.clear();
        phones.clear();
        phones.addAll(curUser.getPhones());
        phoneModel.fireTableDataChanged();


    }//GEN-LAST:event_btDelPhoneActionPerformed

    private void btClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClearActionPerformed
        // TODO add your handling code here:
        // очистим поля, загрузим все денные с базы
        users.clear();
        phones.clear();
        userRepository.findAll().forEach(users::add);
        userModel.fireTableDataChanged();
        phoneModel.fireTableDataChanged();
        curUser = null;
        curPhone = null;
        curPhones = null;
        jSearchFirstName.setText("");
        jSearchLastName.setText("");
        jSearchPhone.setText("");

    }//GEN-LAST:event_btClearActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        // TODO add your handling code here:
        // если поля пустые - то ничего искать не будем
        if (jSearchFirstName.getText().isEmpty() && jSearchLastName.getText().isEmpty() && jSearchPhone.getText().isEmpty()) {
            return;
        }
        List<User> list = new ArrayList<>();
        // если имя и фамилия не пустые то ищем одновременно 
        if (!jSearchFirstName.getText().isEmpty() && !jSearchLastName.getText().isEmpty()) {
            list = userRepository.findAllByFirstNameAndLastName(jSearchFirstName.getText(), jSearchLastName.getText(), Sort.by("lastName"));

        }
        // если тольк имя
        if (!jSearchFirstName.getText().isEmpty() && jSearchLastName.getText().isEmpty()) {
            list = userRepository.findAllByFirstName(jSearchFirstName.getText(), Sort.by("lastName"));

        }
        // если только фамилия
        if (jSearchFirstName.getText().isEmpty() && !jSearchLastName.getText().isEmpty()) {
            list = userRepository.findAllByLastName(jSearchLastName.getText(), Sort.by("lastName"));

        }
        // если телефон не пустой  
        if (!jSearchPhone.getText().isEmpty()) {
            list = userRepository.findByPhones_Phone(jSearchPhone.getText(), Sort.by("lastName"));

        }
        // обновим таблицы данными с базы
        users.clear();
        list.forEach(users::add);
        phones.clear();
        curUser = null;
        curPhone = null;
        curPhones = null;
        userModel.fireTableDataChanged();
        phoneModel.fireTableDataChanged();
        jFirstName.setText("");jLastName.setText("");
    }//GEN-LAST:event_btSearchActionPerformed

    UserRepository userRepository;
    PhoneRepository phoneRepository;
    List<User> users = new ArrayList<>();
    List<Phone> phones = new ArrayList<>();
    UserTableModel userModel = new UserTableModel(users);
    PhoneTableModel phoneModel = new PhoneTableModel(phones);
    User curUser;
    Phone curPhone;
    List<Phone> curPhones;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddPhone;
    private javax.swing.JButton btAddPhone1;
    private javax.swing.JButton btAddUser;
    private javax.swing.JButton btClear;
    private javax.swing.JButton btDelPhone;
    private javax.swing.JButton btDelPhone1;
    private javax.swing.JButton btDelUser;
    private javax.swing.JButton btSavePhone;
    private javax.swing.JButton btSavePhone1;
    private javax.swing.JButton btSaveUser;
    private javax.swing.JButton btSearch;
    private javax.swing.JTextField jFirstName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jLastName;
    private javax.swing.JTextField jNote;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jPhone;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jSearchFirstName;
    private javax.swing.JTextField jSearchLastName;
    private javax.swing.JTextField jSearchPhone;
    private javax.swing.JTable tPhone;
    private javax.swing.JTable tUser;
    // End of variables declaration//GEN-END:variables
}
